// Code generated by MockGen. DO NOT EDIT.
// Source: backend-svc-template/core (interfaces: ReviewStorage)

// Package mocks is a generated GoMock package.
package mocks

import (
	domain "backend-svc-template"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockReviewStorage is a mock of ReviewStorage interface.
type MockReviewStorage struct {
	ctrl     *gomock.Controller
	recorder *MockReviewStorageMockRecorder
}

// MockReviewStorageMockRecorder is the mock recorder for MockReviewStorage.
type MockReviewStorageMockRecorder struct {
	mock *MockReviewStorage
}

// NewMockReviewStorage creates a new mock instance.
func NewMockReviewStorage(ctrl *gomock.Controller) *MockReviewStorage {
	mock := &MockReviewStorage{ctrl: ctrl}
	mock.recorder = &MockReviewStorageMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockReviewStorage) EXPECT() *MockReviewStorageMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockReviewStorage) Add(arg0 *domain.Review) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Add indicates an expected call of Add.
func (mr *MockReviewStorageMockRecorder) Add(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockReviewStorage)(nil).Add), arg0)
}

// Delete mocks base method.
func (m *MockReviewStorage) Delete(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Delete", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Delete indicates an expected call of Delete.
func (mr *MockReviewStorageMockRecorder) Delete(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Delete", reflect.TypeOf((*MockReviewStorage)(nil).Delete), arg0)
}

// List mocks base method.
func (m *MockReviewStorage) List(arg0 string) ([]*domain.Review, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "List", arg0)
	ret0, _ := ret[0].([]*domain.Review)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// List indicates an expected call of List.
func (mr *MockReviewStorageMockRecorder) List(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "List", reflect.TypeOf((*MockReviewStorage)(nil).List), arg0)
}
